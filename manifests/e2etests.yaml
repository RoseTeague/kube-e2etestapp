---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-e2etests-deployment
  labels:
    appId: kube
---
# we put resourcequotas in because if pods get stuck in terminating etc the app can exaserbate other issues on the cluster.
apiVersion: v1
kind: ResourceQuota
metadata:
  name: safety
  namespace: kube-e2etests-deployment
spec:
  hard:
    cpu: "1"
    memory: 1Gi
    requests.storage: 50Gi
    persistentvolumeclaims: "5"
    configmaps: "5"
    pods: "10"
    replicationcontrollers: "5"
    services: "5"
    secrets: "5"
---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-e2etests-deployment-pvc
  labels:
    appId: kube
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: safety
  namespace: kube-e2etests-deployment-pvc
spec:
  hard:
    cpu: "1"
    memory: 1Gi
    requests.storage: 50Gi
    persistentvolumeclaims: "5"
    configmaps: "5"
    pods: "10"
    replicationcontrollers: "5"
    services: "5"
    secrets: "5"
---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-e2etests-deployment-update
  labels:
    appId: kube
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: safety
  namespace: kube-e2etests-deployment-update
spec:
  hard:
    cpu: "1"
    memory: 1Gi
    requests.storage: 50Gi
    persistentvolumeclaims: "5"
    configmaps: "5"
    pods: "10"
    replicationcontrollers: "5"
    services: "5"
    secrets: "5"
---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-e2etests-deployment-scale
  labels:
    appId: kube
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: safety
  namespace: kube-e2etests-deployment-scale
spec:
  hard:
    cpu: "1"
    memory: 1Gi
    requests.storage: 50Gi
    persistentvolumeclaims: "5"
    configmaps: "5"
    pods: "10"
    replicationcontrollers: "5"
    services: "5"
    secrets: "5"
---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-e2etests-deployment-service
  labels:
    appId: kube
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: safety
  namespace: kube-e2etests-deployment-service
spec:
  hard:
    cpu: "1"
    memory: 1Gi
    requests.storage: 50Gi
    persistentvolumeclaims: "5"
    configmaps: "5"
    pods: "10"
    replicationcontrollers: "5"
    services: "5"
    secrets: "5"
---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-e2etests-service
  labels:
    appId: kube
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: safety
  namespace: kube-e2etests-service
spec:
  hard:
    cpu: "1"
    memory: 1Gi
    requests.storage: 50Gi
    persistentvolumeclaims: "5"
    configmaps: "5"
    pods: "10"
    replicationcontrollers: "5"
    services: "5"
    secrets: "5"
---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-e2etests-deployment-scale-service
  labels:
    appId: kube
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: safety
  namespace: kube-e2etests-deployment-scale-service
spec:
  hard:
    cpu: "1"
    memory: 1Gi
    requests.storage: 50Gi
    persistentvolumeclaims: "5"
    configmaps: "5"
    pods: "10"
    replicationcontrollers: "5"
    services: "5"
    secrets: "5"
---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-e2etests-http
  labels:
    appId: kube
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: safety
  namespace: kube-e2etests-http
spec:
  hard:
    cpu: "1"
    memory: 1Gi
    requests.storage: 50Gi
    persistentvolumeclaims: "5"
    configmaps: "5"
    pods: "10"
    replicationcontrollers: "5"
    services: "5"
    secrets: "5"
---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-e2etests-http-update
  labels:
    appId: kube
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: safety
  namespace: kube-e2etests-http-update
spec:
  hard:
    cpu: "1"
    memory: 1Gi
    requests.storage: 50Gi
    persistentvolumeclaims: "5"
    configmaps: "5"
    pods: "10"
    replicationcontrollers: "5"
    services: "5"
    secrets: "5"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: e2etests
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 1
  template:
    metadata:
      labels:
        app: e2etests
    spec:
      volumes:
      - name: exporter-config
        configMap:
          name: statsd-exporter-map
      - name: statsd-config
        configMap:
          name: statsd-config
      containers:
      # OPTIONAL: if you don't want a frontend on this you can rip out this container.
      - name: flask
        command: ["python"]
        args: ["kubee2etests/scripts/flask_runner.py"]
        env:
        - name: SECONDS_BETWEEN_RUNS
          value: "300"
        <<: &e2etests-image
          image: ocadotechnology/kube-e2etestapp:latest
        ports:
        - name: flask
          containerPort: 8081
        readinessProbe:
          httpGet:
            path: /
            port: flask
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: flask
          initialDelaySeconds: 3
          periodSeconds: 3
        # OPTIONAL: if you don't want any metrics you can rip out this container.
      - name: statsd
        image: ocadotechnology/statsd:0.8.0-1
        ports:
        - name: statsd
          containerPort: 8125
        volumeMounts:
        - name: statsd-config
          mountPath: /statsd-config
      # OPTIONAL: if you don't need a statsd -> prometheus bridge you don't need this container.
      - name: statsd-exporter
        image: prom/statsd-exporter:0.3.0
        args:
        - "-statsd.add-suffix=false"
        - "-statsd.mapping-config=/exporter-config/mapping.conf"
        ports:
        - name: prometheus
          containerPort: 9102
        - name: statsd
          containerPort: 9125
        readinessProbe:
          httpGet:
            path: /metrics
            port: prometheus
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /metrics
            port: prometheus
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - name: exporter-config
          mountPath: /exporter-config
      # TODO: re-enable this test when weave npc is fixed
      # - name: namespace
      #   <<: *e2etests-image
      #   command: ["python"]
      #   args: ["kubee2etests/scripts/test_runner.py", "namespace"]
      #   env:
      #   - name: TEST_NAMESPACE
      #     value: kube-e2etests-namespace
      - name: deployment
        <<: *e2etests-image
        command: ["python"]
        args: ["kubee2etests/scripts/test_runner.py", "deployment"]
        env:
        - name: SECONDS_BETWEEN_RUNS
          value: "300"
        - name: TEST_NAMESPACE
          value: kube-e2etests-deployment
      - name: deployment-pvc
        <<: *e2etests-image
        command: ["python"]
        args: ["kubee2etests/scripts/test_runner.py", "deployment_pvc"]
        env:
        - name: SECONDS_BETWEEN_RUNS
          value: "300"
        - name: TEST_NAMESPACE
          value: kube-e2etests-deployment-pvc
      - name: deployment-update
        <<: *e2etests-image
        command: ["python"]
        args: ["kubee2etests/scripts/test_runner.py", "deployment_update"]
        env:
        - name: SECONDS_BETWEEN_RUNS
          value: "300"
        - name: TEST_NAMESPACE
          value: kube-e2etests-deployment-update
      - name: deployment-scale
        <<: *e2etests-image
        command: ["python"]
        args: ["kubee2etests/scripts/test_runner.py", "deployment_scale"]
        env:
        - name: SECONDS_BETWEEN_RUNS
          value: "300"
        - name: TEST_NAMESPACE
          value: kube-e2etests-deployment-scale
      - name: service
        <<: *e2etests-image
        command: ["python"]
        args: ["kubee2etests/scripts/test_runner.py", "service"]
        env:
        - name: SECONDS_BETWEEN_RUNS
          value: "300"
        - name: TEST_NAMESPACE
          value: kube-e2etests-service
      - name: deployment-service
        <<: *e2etests-image
        command: ["python"]
        args: ["kubee2etests/scripts/test_runner.py", "deployment_service"]
        env:
        - name: SECONDS_BETWEEN_RUNS
          value: "300"
        - name: TEST_NAMESPACE
          value: kube-e2etests-deployment-service
      - name: deployment-scale-service
        <<: *e2etests-image
        command: ["python"]
        args: ["kubee2etests/scripts/test_runner.py", "deployment_scale_service"]
        env:
        - name: SECONDS_BETWEEN_RUNS
          value: "300"
        - name: TEST_NAMESPACE
          value: kube-e2etests-deployment-scale-service
      - name: http
        <<: *e2etests-image
        command: ["python"]
        args: ["kubee2etests/scripts/test_runner.py", "http"]
        env:
        - name: SECONDS_BETWEEN_RUNS
          value: "300"
        - name: TEST_NAMESPACE
          value: kube-e2etests-http
      - name: http-update
        <<: *e2etests-image
        command: ["python"]
        args: ["kubee2etests/scripts/test_runner.py", "http_update"]
        env:
        - name: SECONDS_BETWEEN_RUNS
          value: "300"
        - name: TEST_NAMESPACE
          value: kube-e2etests-http-update
      serviceAccountName: e2etests
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: e2etests
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: e2etests
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - get
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - endpoints
  - services
  verbs:
  - list
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: e2etests-deployment
  namespace: kube-e2etests-deployment
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - create
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: e2etests-deployment-pvc
  namespace: kube-e2etests-deployment-pvc
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - persistentvolumeclaims
  verbs:
  - create
  - get
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - create
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: e2etests-deployment-update
  namespace: kube-e2etests-deployment-update
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: e2etests-deployment-scale
  namespace: kube-e2etests-deployment-scale
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: e2etests-service
  namespace: kube-e2etests-service
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - create
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: e2etests-deployment-service
  namespace: kube-e2etests-deployment-service
rules:
- apiGroups:
  - ""
  resources:
  - services
  - configmaps
  verbs:
  - get
  - create
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: e2etests-deployment-scale-service
  namespace: kube-e2etests-deployment-scale-service
rules:
- apiGroups:
  - ""
  resources:
  - services
  - configmaps
  verbs:
  - get
  - create
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
  - read
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: e2etests-http
  namespace: kube-e2etests-http
rules:
- apiGroups:
  - ""
  resources:
  - services
  - configmaps
  verbs:
  - get
  - create
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
  - watch
  - read
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: e2etests-http-update
  namespace: kube-e2etests-http-update
rules:
- apiGroups:
  - ""
  resources:
  - services
  - configmaps
  verbs:
  - get
  - create
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
  - watch
  - read
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: osp:e2etests
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: e2etests
subjects:
- kind: ServiceAccount
  name: e2etests
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: osp:e2etests-deployment
  namespace: kube-e2etests-deployment
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: e2etests-deployment
subjects:
- kind: ServiceAccount
  name: e2etests
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: osp:e2etests-deployment-update
  namespace: kube-e2etests-deployment-update
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: e2etests-deployment-update
subjects:
- kind: ServiceAccount
  name: e2etests
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: osp:e2etests-deployment-scale
  namespace: kube-e2etests-deployment-scale
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: e2etests-deployment-scale
subjects:
- kind: ServiceAccount
  name: e2etests
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: osp:e2etests-deployment-service
  namespace: kube-e2etests-deployment-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: e2etests-deployment-service
subjects:
- kind: ServiceAccount
  name: e2etests
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: osp:e2etests-service
  namespace: kube-e2etests-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: e2etests-service
subjects:
- kind: ServiceAccount
  name: e2etests
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: osp:e2etests-deployment-scale-service
  namespace: kube-e2etests-deployment-scale-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: e2etests-deployment-scale-service
subjects:
- kind: ServiceAccount
  name: e2etests
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: osp:e2etests-http
  namespace: kube-e2etests-http
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: e2etests-http
subjects:
- kind: ServiceAccount
  name: e2etests
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: osp:e2etests-http-update
  namespace: kube-e2etests-http-update
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: e2etests-http-update
subjects:
- kind: ServiceAccount
  name: e2etests
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: osp:e2etests-deployment-pvc
  namespace: kube-e2etests-deployment-pvc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: e2etests-deployment-pvc
subjects:
- kind: ServiceAccount
  name: e2etests
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: e2etests
spec:
  podSelector:
    matchLabels:
      app: e2etests
  ingress:
  - ports:
    - port: 8081
      protocol: TCP
  - from:
    - podSelector:
        matchLabels:
          app: prometheus
          prometheus: k8s
    ports:
    - port: 9102
      protocol: TCP
